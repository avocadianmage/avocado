//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AvocadoServer.AvocadoServerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AvocadoServerService.IServerAPI")]
    public interface IServerAPI {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerAPI/Ping", ReplyAction="http://tempuri.org/IServerAPI/PingResponse")]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerAPI/Ping", ReplyAction="http://tempuri.org/IServerAPI/PingResponse")]
        System.Threading.Tasks.Task<bool> PingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerAPI/GetJobs", ReplyAction="http://tempuri.org/IServerAPI/GetJobsResponse")]
        string[] GetJobs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerAPI/GetJobs", ReplyAction="http://tempuri.org/IServerAPI/GetJobsResponse")]
        System.Threading.Tasks.Task<string[]> GetJobsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerAPI/RunJob", ReplyAction="http://tempuri.org/IServerAPI/RunJobResponse")]
        void RunJob(string app, string name, string[] args);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerAPI/RunJob", ReplyAction="http://tempuri.org/IServerAPI/RunJobResponse")]
        System.Threading.Tasks.Task RunJobAsync(string app, string name, string[] args);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerAPI/KillJob", ReplyAction="http://tempuri.org/IServerAPI/KillJobResponse")]
        void KillJob(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerAPI/KillJob", ReplyAction="http://tempuri.org/IServerAPI/KillJobResponse")]
        System.Threading.Tasks.Task KillJobAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerAPIChannel : AvocadoServer.AvocadoServerService.IServerAPI, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerAPIClient : System.ServiceModel.ClientBase<AvocadoServer.AvocadoServerService.IServerAPI>, AvocadoServer.AvocadoServerService.IServerAPI {
        
        public ServerAPIClient() {
        }
        
        public ServerAPIClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServerAPIClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerAPIClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerAPIClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<bool> PingAsync() {
            return base.Channel.PingAsync();
        }
        
        public string[] GetJobs() {
            return base.Channel.GetJobs();
        }
        
        public System.Threading.Tasks.Task<string[]> GetJobsAsync() {
            return base.Channel.GetJobsAsync();
        }
        
        public void RunJob(string app, string name, string[] args) {
            base.Channel.RunJob(app, name, args);
        }
        
        public System.Threading.Tasks.Task RunJobAsync(string app, string name, string[] args) {
            return base.Channel.RunJobAsync(app, name, args);
        }
        
        public void KillJob(int id) {
            base.Channel.KillJob(id);
        }
        
        public System.Threading.Tasks.Task KillJobAsync(int id) {
            return base.Channel.KillJobAsync(id);
        }
    }
}
